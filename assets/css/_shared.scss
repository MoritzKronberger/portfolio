$offWhite: #FBFBFB;
$offBlack: #222222;

// custom property helper function
@function v($property){
    @return var(--#{$property});
}

//fonts
@import url('https://fonts.googleapis.com/css2?family=Atkinson+Hyperlegible:wght@400;700&display=swap');
@import url('https://fonts.googleapis.com/css2?family=Roboto+Mono:wght@400;700&display=swap');

// simplified efficient font stack by:
// https://gist.github.com/fabricelejeune/bcdd3d4725d4e4cea672
$main: (
    huge: (
        family: 'Atkinson Hyperlegible',
        weight: 700,
        size: v(fs-main-huge)
    ),
    big: (
        family: 'Atkinson Hyperlegible',
        weight: 400,
        size: v(fs-main-big)
    ),
    regular: (
        family: 'Atkinson Hyperlegible',
        weight: 400,
        size: v(fs-main-regular)
    ),
    small: (
        family: 'Atkinson Hyperlegible',
        weight: 400,
        size: v(fs-main-small)
    ),
    tiny: (
        family: 'Atkinson Hyperlegible',
        weight: 400,
        size: v(fs-main-tiny)
    )
);

$code: (
    huge: (
        family: 'Roboto Mono',
        weight: 700,
        size: v(fs-code-huge)
    ),
    big: (
        family: 'Roboto Mono',
        weight: 700,
        size: v(fs-code-big)
    ),
    regular: (
        family: 'Roboto Mono',
        weight: 400,
        size: v(fs-code-regular)
    ),
    small: (
        family: 'Roboto Mono',
        weight: 400,
        size: v(fs-code-small)
    ),
    tiny: (
        family: 'Roboto Mono',
        weight: 400,
        size: v(fs-code-tiny)
    )
);

@mixin font($font-stack, $variant, $properties: family weight size) {
    $font-properties: map-get($font-stack, $variant);

    @if $font-properties {
        @each $property, $values in $font-properties {
            @if contains($properties, $property) {
                font-#{$property}: map-get($font-properties, $property);
            }
        }
    }
}
