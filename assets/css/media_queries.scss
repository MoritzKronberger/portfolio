// font sizes for media queries
$font-sizes: (
    main: (
        regular: (
            huge: 3.9375rem,
            big: 1.9375rem,
            regular: 1rem,
            small: .6875rem,
            tiny: .5rem
        ),
        mobile: (
            huge: 2rem,
            big: 1.5rem,
            regular: 1rem,
            small: .6875rem,
            tiny: .5rem
        )
    ),
    code: (
        regular: (
            huge: 3.5rem,
            big: 1.71875rem,
            regular: .89375rem,
            small: .6125rem,
            tiny: .45
        ),
        mobile: (
            huge: 3.5rem,
            big: 1.71875rem,
            regular: .89375rem,
            small: .7rem,
            tiny: .6
        )
    )
);

// main-"grid" sizes for media queries
$main-columns: (
    regular: (
        width: 360px,
        height: 120px,
        gap: 290px
    ),
    mobile: (
        width: 260px,
        height: 80px,
        gap: .75rem
    )
);

// header-"grid" sizes for media queries
$header-columns: (
    regular: (
        width:  map-get(map-get($main-columns, regular), width),
        height: map-get(map-get($main-columns, regular), height),
        gap:    map-get(map-get($main-columns, regular), gap)
    ),
    mobile: (
        width: auto,
        height: 80px,
        gap: 3rem
    )
);

// margin sizes for media queries
$margins: (
    regular: (
        900: 5rem,
        700: 2.5rem,
        600: 2.25rem,
        500: 1.5rem,
        400: 1rem,
        300: .75rem,
        200: .6rem
    ),
    mobile: (
        900: 1.5rem,
        700: 2.5rem,
        600: 2.25rem,
        500: 1.5rem,
        400: 1rem,
        300: .75rem,
        200: .6rem
    )
);

$mobileBreakpoint: 600px;

@mixin setPropsFromMap($map, $prefix){
    @each $size, $elements in $map {
        @if $size == regular {
            @each $element, $value in $elements {
                --#{$prefix}-#{$element}: #{$value};
            }
        }@else {
            @media only screen and(max-width: $mobileBreakpoint) {
                @each $element, $value in $elements {
                    --#{$prefix}-#{$element}: #{$value};
                }
            }
        }
    }
}
